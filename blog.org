#+TITLE: Shane Sveller
#+AUTHOR: Shane Sveller
#+HUGO_BASE_DIR: .
#+HUGO_SECTION: blog
#+HUGO_AUTO_SET_LASTMOD: t

* Utility Commands

~pkg-info-package-version~
~browse-url http://localhost:1313~

* Emacs                                                              :@emacs:
** TODO Blogging with org-mode and ox-hugo               :hugo:org:spacemacs:
   :PROPERTIES:
   :EXPORT_AUTHOR: Shane Sveller
   :EXPORT_DATE: 2017-12-12
   :EXPORT_FILE_NAME: blogging-with-org-mode-and-ox-hugo
   :EXPORT_HUGO_WEIGHT: auto
   :END:

*** Software/Tool Versions

| Software  |       Version |
|-----------+---------------|
| Emacs     |        25.3.1 |
| Spacemacs |       0.300.0 |
| Org       |         9.1.2 |
| Hugo      |        0.31.1 |
| ox-hugo   | 20171026.1402 |
| prodigy   | 20170816.1114 |

*** Requirements

*** Benefits

*** Bonus: Publishing Your Blog With Netlify

** TODO Second Blog Post
   :PROPERTIES:
   :EXPORT_AUTHOR: Shane Sveller
   :EXPORT_DATE: 2017-12-13
   :EXPORT_FILE_NAME: second-blog-post
   :EXPORT_HUGO_WEIGHT: auto
   :END:

Test test!
* Kubernetes                                                    :@kubernetes:
** TODO Allowing HTTP traffic with nginx-ingress
** TODO Securing HTTPS traffic with cert-manager
** TODO Monitoring GKE with CoreOS' Prometheus Operator :coreos:monitoring:prometheus:gke:kubernetes:
   :PROPERTIES:
   :EXPORT_AUTHOR: Shane Sveller
   :EXPORT_FILE_NAME: monitoring-gke-with-coreos-prometheus-operator
   :EXPORT_HUGO_WEIGHT: auto
   :END:

*** Software/Tool Versions

| Project                   |     Version |
|---------------------------+-------------|
| Google Cloud SDK          |     182.0.0 |
| Kubernetes                | 1.8.3-gke.0 |
| Helm                      |       2.7.2 |
| Prometheus Operator       |      0.15.0 |
| Prometheus Operator Chart |       0.0.7 |
| Prometheus                |       1.8.2 |

*** Background

[[https://prometheus.io/][Prometheus]] is all the rage in the Kubernetes community, especially after
becoming a Cloud Native Computing Foundation [[https://www.cncf.io/projects/][hosted project]].

CoreOS has a project called [[https://github.com/coreos/prometheus-operator][prometheus-operator]] which helps manage instances
of a Prometheus server, or its compatriot AlertManager, via Kubernetes manifests.

*** Getting Started

I've chosen to install the Operator via the project's provided [[https://github.com/coreos/prometheus-operator/tree/v0.15.0/helm/prometheus-operator][Helm Chart]].

First, install CoreOS' Helm repository

#+BEGIN_SRC shell-script
  helm init --client-only
  helm repo add coreos https://s3-eu-west-1.amazonaws.com/coreos-charts/stable/
#+END_SRC

I've also provided some customized values:

#+BEGIN_SRC yaml
  global:
    ## Hyperkube image to use when getting ThirdPartyResources & cleaning up
    ##
    hyperkube:
      repository: quay.io/coreos/hyperkube
      # https://quay.io/repository/coreos/hyperkube?tag=latest&tab=tags
      tag: v1.8.4_coreos.0
      pullPolicy: IfNotPresent

  ## Prometheus-operator image
  ##
  image:
    repository: quay.io/coreos/prometheus-operator
    # https://quay.io/repository/coreos/prometheus-operator?tag=latest&tab=tags
    tag: v0.15.0
    pullPolicy: IfNotPresent
#+END_SRC

Finally, I install the chart with my supplied values in a ~monitoring~ namespace:

#+BEGIN_SRC shell-script
  helm install --name prometheus-operator \
       --namespace monitoring \
       --values prometheus-operator-values.yaml \
       coreos/prometheus-operator
#+END_SRC

*** Using kube-prometheus for basic cluster metrics

#+BEGIN_SRC shell-script
  helm install --name kube-prometheus \
       --namespace monitoring \
       --values kube-prometheus-values.yaml \
       coreos/kube-prometheus
#+END_SRC

** TODO Building and testing software with Jenkins on Kubernetes
* Shell Programming                                                 :@shells:
** Fish Shell                                                         :@fish:
*** TODO Getting your feet wet with Fish Shell
   :PROPERTIES:
   :EXPORT_AUTHOR: Shane Sveller
   :EXPORT_FILE_NAME: getting-your-feet-wet-with-fish-shell
   :EXPORT_HUGO_WEIGHT: auto
   :END:

**** Software/Tool Versions

| Software   | Version |
|------------+---------|
| OSX        | 10.12.6 |
| iTerm 2    |   3.1.5 |
| Fish       |   2.7.0 |
| Oh My Fish |       6 |

**** Installation

#+BEGIN_SRC shell-script
  brew install fish
#+END_SRC

Now, install oh-my-fish via ~git~ because curl-bash is for suckers!

#+BEGIN_SRC shell-script
  git clone https://github.com/oh-my-fish/oh-my-fish
  cd oh-my-fish
  bin/install --offline
#+END_SRC

No, really!

* Footnotes
* COMMENT Local Variables                                                   :ARCHIVE:
# Local Variables:
# eval: (add-hook 'after-save-hook #'org-hugo-export-subtree-to-md-after-save :append :local)
# End:
